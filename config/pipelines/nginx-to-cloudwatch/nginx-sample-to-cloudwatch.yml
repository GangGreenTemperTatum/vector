---
data_dir: ./tmp/vector
#debug: true
api:
  enabled: false
  playground: true
  address: 0.0.0.0:8686

sources:
  vector-metrics:
    type: internal_metrics
    scrape_interval_secs: 5
  vector-logs:
    type: internal_logs
   
  nginx-per-host:
    type: file
    include:
      - ./data/*.log
    read_from: beginning
    #count: 10
    
transforms:
  parse-nginx:
    inputs:
      - nginx-per-host
    type: remap
    source: |
      .nginx = parse_nginx_log!(.message,"combined")
      .file_parsed = parse_regex!(.file,r'/(?P<ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\.log')
      .file_parsed_b = parse_regex!(.file,r'^(?P<logdir>^.*)/')
      .nginx.server = .file_parsed.ip
      .nginx.logdir = .file_parsed_b.logdir
      to_int!(.status)
      to_int!(.size)
      del(.file_parsed)
      del(.file_parsed.ip)
      del(.file_parsed_b)
      del(.file_parsed_b.logdir)
      del(.host)
      del(.message)
    ## VRL Functions to include ##
    # Enrich data with `.find_enrichment_table_records`
    # Remove DUP and redundant data fields with `del`
    # Coalesce `parse_regex` statements for cleaner VRL remapy syntax
    # Coalesce `del()` and to_int() statements for cleaner VRL remapy syntax
    ################################  
    ## Retired parsing techniques ##
    # .file_parsed_c = parse_regex!(.file,r'/(?P<ip6>^(?:[A-F0-9]{1,4}:){7}[A-F0-9]{1,4}$)\.log')
    # .nginx.server6 = .file_parsed_c.ipc
    # .file_parsed = parse_regex!(.file,r'data/(?P<ip>\d+\.\d+\.\d+\.\d+)\.log')
    # .nginx.server = parse_regex!(.file,r'\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}')
    # .nginx.path = parse_regex!(.file,r'^.*/')
    ################################
    timezone: America/Vancouver

## VRL Functions to include ####
# Scale Vector using `AWS Kinesis Firehose` to host multiple Vector instances over HTTPS
# Deploy as IaC with Terraform
################################  

# config_variables_file_path: etc/vector.toml

sinks:
  cloudwatch:
    acknowledgements:
      enabled: true    
    type: aws_cloudwatch_logs
    inputs:
      - parse-nginx
    encoding:
      codec: json
    auth:
      access_key_id: ${AWS_ACCESS_KEY_ID}
      secret_access_key: ${AWS_SECRET_ACCESS_KEY}
    endpoint: "https://logs.us-east-2.amazonaws.com"
    create_missing_group: true
    create_missing_stream: true
    group_name: "vector-nginx/logs"
    buffer:
      type: memory
      max_events: 500
      when_full: drop_newest
    #batch:
      #batch.max_events: 1049000
      #batch.timeout_secs: 1
    compression: gzip
    healthcheck: true
    #request: false
      #
    #tls: false
      #
    #proxy: null
      #
    region: "us-east-2"
    stream_name: "{{ .nginx.server }}"

#https://docs.aws.amazon.com/general/latest/gr/rande.html
#https://issuehint.com/issue/vectordotdev/vector/12270

  prometheus:
    type: prometheus_exporter
    inputs:
      - vector-metrics
    address: 127.0.0.1:9090

  events_file:
    type: file
    inputs:
      - parse-nginx
    encoding:
      codec: json
    path: ./out/vector-nginx.json

  logs:
    type: file
    inputs:
      - vector-logs
    encoding:
      codec: json
    path: ./out/vector-logs.json
